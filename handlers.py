import gspread
from oauth2client.service_account import ServiceAccountCredentials
from aiogram import types
from aiogram import Dispatcher, F
from aiogram.filters import Command
from aiogram.types import FSInputFile, ReplyKeyboardRemove
from keyboards import kb_con

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ Google Sheets
def init_gspread():
    scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
    creds = ServiceAccountCredentials.from_json_keyfile_name("/home/klim-petrov/projects/smartTG/credentials.json", scope)  # –£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –∫ –≤–∞—à–µ–º—É JSON-—Ñ–∞–π–ª—É
    client = gspread.authorize(creds)
    return client.open_by_url("https://docs.google.com/spreadsheets/d/1K6PkCuSYepOhKzk5sfm8YCxsJ8pxGBfi8IuH1VgxPIY/edit#gid=0").sheet1  # –û—Ç–∫—Ä–æ–π—Ç–µ –≤–∞—à—É —Ç–∞–±–ª–∏—Ü—É

async def cmd_start(message: types.Message):
    await message.answer(f"–ü—Ä–∏–≤–µ—Ç! üëã\n–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å PDF-–≥–∞–π–¥ ¬´–ö–∞–∫ —É–≤–µ–ª–∏—á–∏—Ç—å –ø—Ä–æ–¥–∞–∂–∏ –æ—Ç–¥–µ–ª–∞ –Ω–∞ 30% —Å –ø–æ–º–æ—â—å—é –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞¬ª, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –∏ –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å –≤–∞—à–∏–º –∫–æ–Ω—Ç–∞–∫—Ç–æ–º:", parse_mode="HTML", reply_markup=kb_con)

async def contact_handler(message: types.Message):
    contact = message.contact
    await message.answer(f"–°–ø–∞—Å–∏–±–æ! –ì–∞–π–¥ —É–∂–µ —É –≤–∞—Å üì©\n–ó–∞–≤—Ç—Ä–∞ –≤–µ—Ä–Ω—É—Å—å –∏ —É–∑–Ω–∞—é –≤–∞—à–µ –º–Ω–µ–Ω–∏–µ üòâ", parse_mode="HTML", reply_markup=ReplyKeyboardRemove())

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–Ω—Ç–∞–∫—Ç –≤ Google Sheets
    sheet = init_gspread()
    sheet.append_row([contact.first_name, contact.phone_number])  # –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º PDF-—Ñ–∞–π–ª
    pdf_file = FSInputFile("/home/klim-petrov/projects/smartTG/guide.pdf")  # –£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –∫ –≤–∞—à–µ–º—É PDF-—Ñ–∞–π–ª—É
    await message.answer_document(pdf_file)

# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤—Å–µ—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
def reg_handlers(dp: Dispatcher):
    dp.message.register(cmd_start, Command(commands=['start']))
    dp.message.register(contact_handler, F.contact)